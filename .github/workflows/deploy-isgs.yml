
name: Deploy ISGS Docker Image

on:
  push:
    branches: [dockerize]

defaults:
  run:
    # -l: login shell, needed when using Conda
    shell: bash -l {0}

env:
  PIP_PROGRESS_BAR: "off"

jobs:

  docker_build_and_push:
    name: Push docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          ecr: auto
          logout: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Add .env file
        working-directory: ./app/internal
        run: |
            echo ENVIRONMENT=\"prod\"'\n'\
            BACKEND_URL=\"${{ secrets.ISGS_BACKEND_URL }}\"'\n'\
            LOCATION=\"us\"'\n'\
            DB_USERNAME=\"${{ secrets.ISGS_DB_USERNAME }}\"'\n'\
            DB_PASSWORD=\"${{ secrets.ISGS_DB_PASSWORD }}\"'\n'\
            DB_CONNECTION=\"${{ secrets.ISGS_DB_CONNECTION }}\"'\n'\
            DB_NAME=\"${{ secrets.ISGS_DB_NAME }}\"'\n'\
            DB_FULL_CONNECTION_STRING=\"${{ secrets.ISGS_DB_FULL_CONNECTION_STRING }}\"'\n'\
            PROJECT_ID=\"${{ secrets.STAGING_PROJECT_ID }}\"'\n'\
            STORAGE_SERVICE_KEY=\"${{ secrets.STAGING_STORAGE_SERVICE_KEY }}\"'\n'\
            STORAGE_BUCKET_NAME=\"${{ secrets.ISGS_STORAGE_BUCKET_NAME }}\"'\n'\
            token_uri=\"${{ secrets.auth_token_uri }}\"'\n'\
            client_id=\"${{ secrets.auth_client_id }}\"'\n'\
            client_secret=\"${{ secrets.auth_client_secret }}\" >> .env

      - name: Add .env file to root directory
        run: |
            echo ENVIRONMENT=\"prod\"'\n'\
            BACKEND_URL=\"${{ secrets.ISGS_BACKEND_URL }}\"'\n'\
            LOCATION=\"us\"'\n'\
            DB_USERNAME=\"${{ secrets.ISGS_DB_USERNAME }}\"'\n'\
            DB_PASSWORD=\"${{ secrets.ISGS_DB_PASSWORD }}\"'\n'\
            DB_CONNECTION=\"${{ secrets.ISGS_DB_CONNECTION }}\"'\n'\
            DB_NAME=\"${{ secrets.ISGS_DB_NAME }}\"'\n'\
            DB_FULL_CONNECTION_STRING=\"${{ secrets.ISGS_DB_FULL_CONNECTION_STRING }}\"'\n'\
            PROJECT_ID=\"${{ secrets.STAGING_PROJECT_ID }}\"'\n'\
            STORAGE_SERVICE_KEY=\"${{ secrets.STAGING_STORAGE_SERVICE_KEY }}\"'\n'\
            STORAGE_BUCKET_NAME=\"${{ secrets.ISGS_STORAGE_BUCKET_NAME }}\"'\n'\
            token_uri=\"${{ secrets.auth_token_uri }}\"'\n'\
            client_id=\"${{ secrets.auth_client_id }}\"'\n'\
            client_secret=\"${{ secrets.auth_client_secret }}\" >> .env

      - name: cat .env file
        run: |
            cat .env

      - name: Add creds file
        id: create-creds-json
        uses: jsdaniell/create-json@1.1.2
        with:
            name: "app/internal/creds.json"
            json: ${{ secrets.STAGING_CREDS_JSON }}

      - name: Add service key json file
        id: create-service-key-json
        uses: jsdaniell/create-json@1.1.2
        with:
            name: "app/internal/tidy-outlet-service-key.json"
            json: ${{ secrets.STAGING_SERVICE_KEY_JSON }}
    
      - name: Extract metadata (labels, tags, etc.) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
            images: michaelpescelbl/fastapiwithnginx
    
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
            context: .
            file: ./Dockerfile
            push: true
            tags: michaelpescelbl/fastapiwithnginx:latest
            labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to ISGS Compute Engine
    runs-on: ubuntu-latest
    # if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ docker_build_and_push ]
    steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: copy file via ssh key
          uses: appleboy/scp-action@v0.1.4
          with:
            host: ${{ secrets.ISGS_BACKEND_IP }}
            username: mpesce
            key: ${{ secrets.ISGS_SSH_PRIVATE_KEY }}
            source: "docker-compose.yml, nginx/nginx.conf"
            target: .

        - name: Add .env file to root directory
          run: |
              echo ENVIRONMENT=\"prod\"'\n'\
              BACKEND_URL=\"${{ secrets.ISGS_BACKEND_URL }}\"'\n'\
              LOCATION=\"us\"'\n'\
              DB_USERNAME=\"${{ secrets.ISGS_DB_USERNAME }}\"'\n'\
              DB_PASSWORD=\"${{ secrets.ISGS_DB_PASSWORD }}\"'\n'\
              DB_CONNECTION=\"${{ secrets.ISGS_DB_CONNECTION }}\"'\n'\
              DB_NAME=\"${{ secrets.ISGS_DB_NAME }}\"'\n'\
              DB_FULL_CONNECTION_STRING=\"${{ secrets.ISGS_DB_FULL_CONNECTION_STRING }}\"'\n'\
              PROJECT_ID=\"${{ secrets.STAGING_PROJECT_ID }}\"'\n'\
              STORAGE_SERVICE_KEY=\"${{ secrets.STAGING_STORAGE_SERVICE_KEY }}\"'\n'\
              STORAGE_BUCKET_NAME=\"${{ secrets.ISGS_STORAGE_BUCKET_NAME }}\"'\n'\
              token_uri=\"${{ secrets.auth_token_uri }}\"'\n'\
              client_id=\"${{ secrets.auth_client_id }}\"'\n'\
              client_secret=\"${{ secrets.auth_client_secret }}\" >> .env

        - name: run docker-compose
          uses: appleboy/ssh-action@v1.0.0
          with:
            host: ${{ secrets.ISGS_BACKEND_IP }}
            username: mpesce
            key: ${{ secrets.ISGS_SSH_PRIVATE_KEY }}
            script: |
                sudo docker compose down
                sudo docker rmi -f $(sudo docker images -q)
                sudo docker compose pull
                sudo docker compose up -d